[
 {twitterl, [
          %% Tweet parsers
          {tweet_parsers, 2},
          {requestors, 1},
          {retry_count, 5},
          %% Oauth Data
          {oauth_consumer_key, "gMB7a5VKw0k1NFagOdKmA"},
          {oauth_consumer_secret, "QQHYTX3c4Dd0lbKHAx3zTRcGNrMebsbiyckBHztY"},
          {oauth_access_token, "603862721-lulYk4ORnaeZ5UtII3wAGaV7QzYoUOz5fmveHb0g"},
          {oauth_access_token_secret, "svoCAnFthvhrDfYKCyO2p2115fWdwMUzOmVxbDL0"}
         ]},
 {boss, [
         {path, "deps/boss"},
         {applications, [emob_ui]},
         {db_host, "localhost"},
         {db_port, 1978},
         {db_adapter, mock},
         {log_dir, "log"},
         {server, mochiweb},
         {port, 3000},
         {session_adapter, mock},
         {session_key, "_emob_ui_session"},
         {session_exp_time, 525600}
        ]},
 {emob_ui, [
            {path, "apps/emob_ui"},
            {base_url, "/"}
           ]},
 {emob, [
         {http_acceptor_count, 100},
         %% Realm used by HTTP authentications
         {http_realm, <<"erlymob.com">>},
         {http_listeners, [
                           {http_listener, [{transport, tcp},
                                            {port, 8080}]} %% ,
                           %% {https_listener, [{transport, ssl},
                           %%                   {port, 8443},
                           %%                   {certfile, "priv/ssl/cert.pem"},
                           %%                   {keyfile, "priv/ssl/key.pem"},
                           %%                   {password, "runes"}]}
                          ]},
         {oauth_consumer_key, "<consumer_key>"},
         {oauth_consumer_secret, "<consumer_secret>"},
         {oauth_access_token, "<access_token>"},
         {oauth_access_token_secret, "<access_token_secret>"}
        ]},
 {gproc, [
          %% Start up gproc in global mode
          {gproc_dist, all}
         ]},
 {lager, [
          %% What handlers to install with what arguments
          %% The defaults for the logfiles are to rotate the files when
          %% they reach 10Mb or at midnight, whichever comes first, and keep
          %% the last 5 rotations. See the lager README for a description of
          %% the time rotation format:
          %% https://github.com/basho/lager/blob/master/README.org
          %%
          %% If you wish to disable rotation, you can either set the size to 0
          %% and the rotation time to "", or instead specify a 2-tuple that only
          %% consists of {Logfile, Level}.
          {handlers, [
                      {lager_console_backend, [debug, true]},
                      {lager_file_backend, [
                                            {"log/error.log", error, 10485760, "$D0", 5},
                                            {"log/console.log", info, 10485760, "$D0", 5}
                                           ]}
                     ]},

          %% Whether to write a crash log, and where.
          %% Commented/omitted/undefined means no crash logger.
          {crash_log, "log/crash.log"},

          %% Maximum size in bytes of events in the crash log - defaults to 65536
          {crash_log_msg_size, 65536},

          %% Maximum size of the crash log in bytes, before its rotated, set
          %% to 0 to disable rotation - default is 0
          {crash_log_size, 10485760},

          %% What time to rotate the crash log - default is no time
          %% rotation. See the lager README for a description of this format:
          %% https://github.com/basho/lager/blob/master/README.org
          {crash_log_date, "$D0"},

          %% Number of rotated crash logs to keep, 0 means keep only the
          %% current one - default is 0
          {crash_log_count, 5},

          %% Whether to redirect error_logger messages into lager - defaults to true
          {error_logger_redirect, true}
         ]}
].
